# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = customs-file-upload

appUrl = "http://"${appName}"-host"

application.logger.name = ${appName}

bootstrap.http.headersAllowlist += "api-subscription-fields-id"
bootstrap.http.headersAllowlist += "X-Client-ID"

xsd.locations.fileupload += "/api/conf/1.0/schemas/fileupload/FileUploadRequest.xsd"

xml.max-errors = 25

file-upload-upscan-callback.url = "http://localhost:9831"
file-transmission-callback.url = "http://localhost:9831"
fileUpload.fileGroupSize.maximum = 11
fileUpload.fileSize.maximum = 10485760 //10MB

# 2 weeks
ttlInSeconds=1209600

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Play Modules
# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of AuthConnector.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.backend.filters.BackendFilters"

# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.customs.file.upload.config.CustomsFileUploadModule"
play.modules.enabled += "uk.gov.hmrc.customs.api.common.CustomsApiCommonModule"

# The application languages
play.i18n.langs = ["en"]

play.http.errorHandler = "uk.gov.hmrc.customs.api.common.config.CustomsErrorHandler"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.customs.file.upload.controllers.FileUploadDocumentationController = {
    needsLogging = false
    needsAuditing = false
  }

  controllers.Assets = {
    needsLogging = false
    needsAuditing = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config
mongodb {
  uri = "mongodb://localhost:27017/customs-file-upload"
}

auditing {
  enabled = false
  traceRequests = true

  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }


  services {

    upscan-initiate-v1 {
      host = localhost
      port = 9479
      context = /upscan/initiate
    }

    upscan-initiate-v2 {
      host = localhost
      port = 9479
      context = /upscan/v2/initiate
    }

    auth {
      host = localhost
      port = 9479
    }

    datastream {
      host = localhost
      port = 8100
    }

    api-subscription-fields {
      host = localhost
      port = 9650
      context = /field
    }

    customs-notification {
      host = localhost
      port = 9821
      bearer-token = "real"
      context = /customs-notification/notify
    }

    file-transmission {
      host = localhost
      port = 9479
      context = /file-transmission/request
    }
  }
}
